/*

Weapon - Assault Rifle

A rapid-fire rifle.

When automatic, it is less accurate but allows for rapid fire.

When semi-auto, it is more accurate, but is shot one at a time.

*/

actor ccAssaultRifle : ccBallistic {
	// Text Info
	Tag "$WT_ASSAULTRIFLE"
	//Obituary ""
	
	// Sounds
	//Weapon.UpSound "sound"
	//Weapon.ReadySound "sound"
	//AttackSound "weapons/dspistol"

	// States
	States {			
		// Weapon Selection
		/*
		This is the set of startup actions when selecting the weapon.
		*/
		Select:
			Goto StartSelect
		PrepWeapon:
			// Apply weapon's weight.
			TNT1 A 0 A_GiveInventory("WeaponWeight", 25)
			// Swapping from another weapon to this weapon.
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Automatic_m", 1, "PrepMode.Automatic")
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Semiauto_m", 1, "PrepMode.Semiauto")
			// Starting a map with this weapon.
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Automatic", 1, "CheckWeaponChamber")
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Semiauto", 1, "CheckWeaponChamber")
			// If the player never had the gun yet, give this weapon's default mode.
			ASRF A 0 A_GiveInventory("ccAssaultRifle_Automatic", 1)
			Goto CheckWeaponChamber
		// Mode Preparation
		/*
		This turns the weapon's mode in memory into the active weapon mode on the HUD.
		*/
		PrepMode.Automatic:
			TNT1 A 0 A_TakeInventory("ccAssaultRifle_Automatic_m", 1)
			TNT1 A 0 A_GiveInventory("ccAssaultRifle_Automatic", 1)
			Goto CheckWeaponChamber
		PrepMode.Semiauto:
			TNT1 A 0 A_TakeInventory("ccAssaultRifle_Semiauto_m", 1)
			TNT1 A 0 A_GiveInventory("ccAssaultRifle_Semiauto", 1)
			Goto CheckWeaponChamber
		// Ammo Loading
		/*
		This brings all the ammo from both the weapon itself and the type,
		into the "current weapon" and "current reserve" slots to read how
		much ammo is available for the gun.
		*/
		CheckWeaponChamber:
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Chamber", 1, "LoadChamber")
			Goto CheckWeaponReserve
		LoadChamber:
			TNT1 A 0 A_TakeInventory("ccAssaultRifle_Chamber", 1)
			TNT1 A 0 A_GiveInventory("Current_Chamber", 1)
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Chamber", 1, "LoadChamber")
			Goto CheckWeaponChamber
		CheckWeaponReserve:
			ASRF A 0 A_JumpIfInventory("bullet_large", 1, "LoadReserve")
			Goto PostSelect
		LoadReserve:
			TNT1 A 0 A_TakeInventory("bullet_large", 1)
			TNT1 A 0 A_GiveInventory("Current_Reserve", 1)
			TNT1 A 0 A_JumpIfInventory("bullet_large", 1, "LoadReserve")
			Goto CheckWeaponReserve
		// Active Weapon
		/*
		The weapon is now active. Run the routines necessary.
		*/
		Ready:
			ASRF A 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWZOOM)
			Goto CheckReady
		AmmoReady:
			ASRF A 0 A_JumpIfInventory("Current_Chamber", 31, "LimitChamber")
			ASRF A 0 A_JumpIfInventory("Current_Reserve", 401, "LimitReserve")
			ASRF A 0 A_JumpIfInventory("bullet_large", 1, "PushReserve")
			Goto Ready
		// Push Reserve Ammo
		/*
		When collecting ammo for this active weapon, make sure all of its
		related ammo in reserve gets pushed to the "current reserve" so the
		player can see how much ammo total of that type.
		*/
		PushReserve:
			TNT1 A 0 A_TakeInventory("bullet_large", 1)
			Goto InsertReserve
		// Deactivate Weapon
		/*
		When the user puts down the weapon for another, run the routines that
		pack away all the ammo appropriately, set the weapon mode to memory,
		and finally end use of the weapon. This works like a reverse of
		bringing the weapon up.
		*/
		Deselect:
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Automatic", 1, "UndoMode.Automatic")
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Semiauto", 1, "UndoMode.Semiauto")
			Stop
		// Mode Memory
		/*
		Remember the mode the gun had before putting away, and keep the tag
		name out of the HUD.
		*/
		UndoMode.Automatic:
			TNT1 A 0 A_TakeInventory("ccAssaultRifle_Automatic", 1)
			TNT1 A 0 A_GiveInventory("ccAssaultRifle_Automatic_m", 1)
			Goto CheckCurrentChamber
		UndoMode.Semiauto:
			TNT1 A 0 A_TakeInventory("ccAssaultRifle_Semiauto", 1)
			TNT1 A 0 A_GiveInventory("ccAssaultRifle_Semiauto_m", 1)
			Goto CheckCurrentChamber
		// Unload Ammo
		/*
		Put the ammo out of the "current weapon" into the weapon's own chamber,
		and the reserve ammo back to its storage.
		*/
		UnloadChamber:
			TNT1 A 0 A_TakeInventory("Current_Chamber", 1)
			TNT1 A 0 A_GiveInventory("ccAssaultRifle_Chamber", 1)
			TNT1 A 0 A_JumpIfInventory("Current_Chamber", 1, "UnloadChamber")
			Goto CheckCurrentChamber
		UnloadReserve:
			TNT1 A 0 A_TakeInventory("Current_Reserve", 1)
			TNT1 A 0 A_GiveInventory("bullet_large", 1)
			ASRF A 0 A_JumpIfInventory("Current_Reserve", 1, "UnloadReserve")
			Goto PostDeselect
			
		// Weapon Aim/Zoom
		Zoom:
			Goto Zoom.ZNX
			
		// Toggle Firing Modes
		AltFire:
			Goto Toggle.WeaponDown
			Stop
		ApplyToggle:
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Automatic", 1, "ApplyToggle.Semiauto")
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Semiauto", 1, "ApplyToggle.Automatic")
		ApplyToggle.Automatic:
			TNT1 A 0 A_TakeInventory("ccAssaultRifle_Semiauto", 1)
			TNT1 A 0 A_GiveInventory("ccAssaultRifle_Automatic", 1)
			TNT1 A 0 A_PlaySound("weapons/sshotl")
			ASRF A 0 A_Print("Automatic")
			Goto Toggle.WeaponUp
		ApplyToggle.Semiauto:
			TNT1 A 0 A_TakeInventory("ccAssaultRifle_Automatic", 1)
			TNT1 A 0 A_GiveInventory("ccAssaultRifle_Semiauto", 1)
			TNT1 A 0 A_PlaySound("weapons/sshotl")
			ASRF A 0 A_Print("Semi-Auto")
			Goto Toggle.WeaponUp
			
		// Firing Mode Actions
		Fire:
			TNT1 A 0 A_JumpIfNoAmmo("DryFire")
			TNT1 A 0 A_JumpIfInventory("ccAssaultRifle_Semiauto", 1, "Fire.Semiauto")
		Fire.Automatic:
			TNT1 A 0 A_Jump(256, "MuzzleFlash1_A", "MuzzleFlash2_A", "MuzzleFlash3_A")
		Fire.Automatic.Recoil:
			ASRF A 0 A_PlaySound("weapons/pistol")
			ASRF A 0 A_FireCustomMissile("bullet_large_p", FRandom(-0.5, 0.5), true, 0, 0, false, FRandom(-0.5, 0.5))
			ASRF A 0 A_SpawnItemEx("gunsmoke", 20, 0, 15, 1, 0, 0.5, 0)
			ASRF A 1 Offset(0,38) A_SetPitch(pitch-1)
			ASRF A 1 Offset(0,35) A_SetPitch(pitch+1)
			ASRF A 1
			ASRF A 0 A_SpawnItemEx("largebrass", 20, 3, 15, 0, FRandom(2.0, 5.0), FRandom(1.0, 2.0), 0)
			TNT1 A 0 A_Refire("Fire")
			Goto Ready
		Fire.Semiauto:
			TNT1 A 0 A_Jump(256, "MuzzleFlash1_S", "MuzzleFlash2_S", "MuzzleFlash3_S")
		Fire.Semiauto.Recoil:
			ASRF A 0 A_PlaySound("weapons/pistol")
			ASRF A 0 A_FireCustomMissile("bullet_large_p", FRandom(-0.1, 0.1), true, 0, 0, false, FRandom(-0.1, 0.1))
			ASRF A 0 A_SpawnItemEx("gunsmoke", 20, 0, 15, 1, 0, 0.5, 0)
			ASRF A 1 Offset(0,38) A_SetPitch(pitch-1)
			ASRF A 1 Offset(0,35) A_SetPitch(pitch+1)
			ASRF A 1
			ASRF A 0 A_SpawnItemEx("largebrass", 20, 3, 15, 0, FRandom(2.0, 5.0), FRandom(1.0, 2.0), 0)
			Goto Ready
		// Muzzle Flashes
		/*
		Some weapons, particularly automatic ones, can look better when firing
		with an animation that randomizes the muzzle flash appearance.
		*/
		// Muzzle Flash (Automatic)
		MuzzleFlash1_A:
			ASRF B 1 A_GunFlash
			Goto Fire.Automatic.Recoil
		MuzzleFlash2_A:
			ASRF C 1 A_GunFlash
			Goto Fire.Automatic.Recoil
		MuzzleFlash3_A:
			ASRF D 1 A_GunFlash
			Goto Fire.Automatic.Recoil
		// Muzzle Flash (Semiauto)
		MuzzleFlash1_S:
			ASRF B 1 A_GunFlash
			Goto Fire.Semiauto.Recoil
		MuzzleFlash2_S:
			ASRF C 1 A_GunFlash
			Goto Fire.Semiauto.Recoil
		MuzzleFlash3_S:
			ASRF D 1 A_GunFlash
			Goto Fire.Semiauto.Recoil
			
		// Weapon Reload
		Reload:
			TNT1 A 0 A_JumpIfInventory("Current_Chamber", 30, "Ready")
			TNT1 A 0 A_JumpIfInventory("Current_Reserve", 1, "StartReload")
			Goto Ready
		StartReload:
			ASRF A 0
			Goto Reload.WeaponDown
		LoopReload:
			TNT1 A 0 A_TakeInventory("Current_Reserve", 1)
			TNT1 A 0 A_GiveInventory("Current_Chamber", 1)
			TNT1 A 0 A_JumpIfInventory("Current_Chamber", 30, "FinishReload")
			TNT1 A 0 A_JumpIfInventory("Current_Reserve", 1, "LoopReload")
			Goto FinishReload
		FinishReload:
			TNT1 A 11
			ASRF A 0
			Goto Reload.WeaponUp
	}
}



// Weapon Modes
/*
These are abstract actors native to the weapon, to allow multiple
firing modes.
*/
actor ccAssaultRifle_Automatic : Inventory {
	Tag "$WMT_ASSAULTRIFLE_AUTOMATIC"
	Inventory.MaxAmount 1
	+INVENTORY.INVBAR
}
actor ccAssaultRifle_Semiauto : Inventory {
	Tag "$WMT_ASSAULTRIFLE_SEMIAUTO"
	Inventory.MaxAmount 1
	+INVENTORY.INVBAR
}



// Weapon Modes - Memory
/*
These are here so the system "remembers" what setting the gun had,
without writing the Tag on the HUD.
*/
actor ccAssaultRifle_Automatic_m : Inventory {
	Inventory.MaxAmount 1
	+INVENTORY.PERSISTENTPOWER
}
actor ccAssaultRifle_Semiauto_m : Inventory {
	Inventory.MaxAmount 1
	+INVENTORY.PERSISTENTPOWER
}



// Weapon Chamber
/*
This is the ammunition inside the gun, so the game remembers how
much was in it when pulling it out again.
*/
actor ccAssaultRifle_Chamber : Ammo {
	Inventory.MaxAmount 30
}





// Weapon-Swap Spawn
/*
This is the spawn object of the weapon.
*/
actor ccAssaultRiflePickup : ccWeaponPickup 11311 {
	/*
	This is the amount of ammo the pickup provides when picked up.
	*/
	Accuracy 15
	
	/*
	Identifies this actor class and derived classes as the named pickup.
	This property needs to match the actor class's name.
	*/
	Species "ccAssaultRiflePickup"

	/*
	This is the name printed on the HUD when using pickup.
	It also displays in the pickup message.
	*/
	Tag "$WT_ASSAULTRIFLE"

	States {
		Spawn:
			ASRF Z 0
			Goto Init
	}
}